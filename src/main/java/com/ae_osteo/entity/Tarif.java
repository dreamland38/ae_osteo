package com.ae_osteo.entity;
// Generated 15 mai 2018 19:22:19 by Hibernate Tools 5.1.7.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Tarif generated by hbm2java
 */
@Entity
@Table(name = "tarif", catalog = "ae_osteo", uniqueConstraints = { @UniqueConstraint(columnNames = "code_tarif"),
		@UniqueConstraint(columnNames = "tarif") })
public class Tarif implements java.io.Serializable {

	private Integer idTarif;
	private String codeTarif;
	private String libelleTarif;
	private int tarif;
	private Set<Consultation> consultations = new HashSet<Consultation>(0);

	public Tarif() {
	}

	public Tarif(String codeTarif, String libelleTarif, int tarif) {
		this.codeTarif = codeTarif;
		this.libelleTarif = libelleTarif;
		this.tarif = tarif;
	}

	public Tarif(String codeTarif, String libelleTarif, int tarif, Set<Consultation> consultations) {
		this.codeTarif = codeTarif;
		this.libelleTarif = libelleTarif;
		this.tarif = tarif;
		this.consultations = consultations;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_tarif", unique = true, nullable = false)
	public Integer getIdTarif() {
		return this.idTarif;
	}

	public void setIdTarif(Integer idTarif) {
		this.idTarif = idTarif;
	}

	@Column(name = "code_tarif", unique = true, nullable = false, length = 45)
	public String getCodeTarif() {
		return this.codeTarif;
	}

	public void setCodeTarif(String codeTarif) {
		this.codeTarif = codeTarif;
	}

	@Column(name = "libelle_tarif", nullable = false, length = 45)
	public String getLibelleTarif() {
		return this.libelleTarif;
	}

	public void setLibelleTarif(String libelleTarif) {
		this.libelleTarif = libelleTarif;
	}

	@Column(name = "tarif", unique = true, nullable = false)
	public int getTarif() {
		return this.tarif;
	}

	public void setTarif(int tarif) {
		this.tarif = tarif;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "consultation_a_tarif", catalog = "ae_osteo", joinColumns = {
			@JoinColumn(name = "rf_id_tarif", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "rf_id_consultation", nullable = false, updatable = false) })
	public Set<Consultation> getConsultations() {
		return this.consultations;
	}

	public void setConsultations(Set<Consultation> consultations) {
		this.consultations = consultations;
	}

}
