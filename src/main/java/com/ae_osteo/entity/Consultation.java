package com.ae_osteo.entity;
// Generated 15 mai 2018 19:22:19 by Hibernate Tools 5.1.7.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Consultation generated by hbm2java
 */
@Entity
@Table(name = "consultation", catalog = "ae_osteo")
public class Consultation implements java.io.Serializable {

	private Integer idConsultation;
	private String motifsConsultation;
	private String observationsTests;
	private String traitement;
	private String bilan;
	private String examensComplementaires;
	private String natureActe;
	private Set<Rdv> rdvs = new HashSet<Rdv>(0);
	private Set<Tarif> tarifs = new HashSet<Tarif>(0);
	private Set<Facture> factures = new HashSet<Facture>(0);

	public Consultation() {
	}

	public Consultation(String motifsConsultation, String observationsTests, String traitement, String bilan,
			String examensComplementaires, String natureActe, Set<Rdv> rdvs, Set<Tarif> tarifs, Set<Facture> factures) {
		this.motifsConsultation = motifsConsultation;
		this.observationsTests = observationsTests;
		this.traitement = traitement;
		this.bilan = bilan;
		this.examensComplementaires = examensComplementaires;
		this.natureActe = natureActe;
		this.rdvs = rdvs;
		this.tarifs = tarifs;
		this.factures = factures;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_consultation", unique = true, nullable = false)
	public Integer getIdConsultation() {
		return this.idConsultation;
	}

	public void setIdConsultation(Integer idConsultation) {
		this.idConsultation = idConsultation;
	}

	@Column(name = "motifs_consultation", length = 150)
	public String getMotifsConsultation() {
		return this.motifsConsultation;
	}

	public void setMotifsConsultation(String motifsConsultation) {
		this.motifsConsultation = motifsConsultation;
	}

	@Column(name = "observations_tests")
	public String getObservationsTests() {
		return this.observationsTests;
	}

	public void setObservationsTests(String observationsTests) {
		this.observationsTests = observationsTests;
	}

	@Column(name = "traitement")
	public String getTraitement() {
		return this.traitement;
	}

	public void setTraitement(String traitement) {
		this.traitement = traitement;
	}

	@Column(name = "bilan")
	public String getBilan() {
		return this.bilan;
	}

	public void setBilan(String bilan) {
		this.bilan = bilan;
	}

	@Column(name = "examens_complementaires")
	public String getExamensComplementaires() {
		return this.examensComplementaires;
	}

	public void setExamensComplementaires(String examensComplementaires) {
		this.examensComplementaires = examensComplementaires;
	}

	@Column(name = "nature_acte", length = 150)
	public String getNatureActe() {
		return this.natureActe;
	}

	public void setNatureActe(String natureActe) {
		this.natureActe = natureActe;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consultation")
	public Set<Rdv> getRdvs() {
		return this.rdvs;
	}

	public void setRdvs(Set<Rdv> rdvs) {
		this.rdvs = rdvs;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "consultation_a_tarif", catalog = "ae_osteo", joinColumns = {
			@JoinColumn(name = "rf_id_consultation", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "rf_id_tarif", nullable = false, updatable = false) })
	public Set<Tarif> getTarifs() {
		return this.tarifs;
	}

	public void setTarifs(Set<Tarif> tarifs) {
		this.tarifs = tarifs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consultation")
	public Set<Facture> getFactures() {
		return this.factures;
	}

	public void setFactures(Set<Facture> factures) {
		this.factures = factures;
	}

}
